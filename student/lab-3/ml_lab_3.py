# -*- coding: utf-8 -*-
"""ml-lab-3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17KQwHeALMRM7QDn5kvzNKf0l0-g8Rt93
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.impute import SimpleImputer
from sklearn.impute import MissingIndicator
from sklearn.preprocessing import LabelEncoder, OneHotEncoder
from sklearn.preprocessing import MinMaxScaler, StandardScaler, Normalizer

# %matplotlib inline 
sns.set(style="ticks")

data = pd.read_csv('./sample_data/master.csv', sep=",")

# размер набора данных
data.shape

# типы колонок
data.dtypes

# проверим есть ли пропущенные значения
data.isnull().sum()

generation = 'generation'
population = 'population'
hdi = 'HDI for year'
age = 'age'

# Первые 5 строк датасета
data.head()

sns.countplot(x=generation, data=data);

# Удаление строк, содержащих пустые значения
filled_data = data.dropna(axis=0, how='any')
(data.shape, filled_data.shape)

sns.countplot(x=hdi, data=filled_data);

#категоризацмя label encoding
le = LabelEncoder()
car_enc_le = le.fit_transform(filled_data[age])
filled_data[age].unique()

encoded_age = np.unique(data_enc_le)
encoded_age

le.inverse_transform(encoded_age)

#категоризация bin encoding
pd.get_dummies(filled_data).head()

#масштабирование MinMax
scaler = MinMaxScaler()
scaler_data = scaler.fit_transform(data[[population]])

plt.hist(data[population], 50)
plt.show()

plt.hist(scaler_data, 50)
plt.show()

#масштабирование данных на основе Z-оценки 
scaler = StandardScaler()
scaler_data = scaler.fit_transform(data[[population]])

plt.hist(scaler_data, 50)
plt.show()

#масштабирование нормализация
scaler = Normalizer()
scaler_data = scaler.fit_transform(data[[population]])

plt.hist(scaler_data, 50)
plt.show()